// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/tryVital/vital-go/internal"
)

type InsuranceSearchDiagnosisRequest struct {
	DiagnosisQuery string `json:"-" url:"diagnosis_query"`
}

type InsuranceSearchGetPayorInfoRequest struct {
	InsuranceName   *string                    `json:"-" url:"insurance_name,omitempty"`
	Provider        *PayorCodeExternalProvider `json:"-" url:"provider,omitempty"`
	ProviderPayorId *string                    `json:"-" url:"provider_payor_id,omitempty"`
}

type PayorSearchRequest struct {
	InsuranceName *string                    `json:"insurance_name,omitempty" url:"-"`
	Provider      *PayorCodeExternalProvider `json:"provider,omitempty" url:"-"`
	ProviderId    *string                    `json:"provider_id,omitempty" url:"-"`
}

type ClientFacingDiagnosisInformation struct {
	// Diagnosis code for insurance information.
	DiagnosisCode string `json:"diagnosis_code" url:"diagnosis_code"`
	// Diagnosis description insurance information.
	Description string `json:"description" url:"description"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ClientFacingDiagnosisInformation) GetDiagnosisCode() string {
	if c == nil {
		return ""
	}
	return c.DiagnosisCode
}

func (c *ClientFacingDiagnosisInformation) GetDescription() string {
	if c == nil {
		return ""
	}
	return c.Description
}

func (c *ClientFacingDiagnosisInformation) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ClientFacingDiagnosisInformation) UnmarshalJSON(data []byte) error {
	type unmarshaler ClientFacingDiagnosisInformation
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClientFacingDiagnosisInformation(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ClientFacingDiagnosisInformation) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ClientFacingPayorSearchResponse struct {
	// Payor code returned for the insurance information.
	PayorCode string `json:"payor_code" url:"payor_code"`
	// Insurance name returned for the insurance information.
	Name string `json:"name" url:"name"`
	// Insurance name aliases returned for the insurance information.
	Aliases []string `json:"aliases" url:"aliases"`
	// Insurance business address returned for the insurance information.
	OrgAddress *Address `json:"org_address" url:"org_address"`
	// The source of the payor, can be one of (platform, team).
	Source ClientFacingPayorCodeSource `json:"source" url:"source"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ClientFacingPayorSearchResponse) GetPayorCode() string {
	if c == nil {
		return ""
	}
	return c.PayorCode
}

func (c *ClientFacingPayorSearchResponse) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *ClientFacingPayorSearchResponse) GetAliases() []string {
	if c == nil {
		return nil
	}
	return c.Aliases
}

func (c *ClientFacingPayorSearchResponse) GetOrgAddress() *Address {
	if c == nil {
		return nil
	}
	return c.OrgAddress
}

func (c *ClientFacingPayorSearchResponse) GetSource() ClientFacingPayorCodeSource {
	if c == nil {
		return ""
	}
	return c.Source
}

func (c *ClientFacingPayorSearchResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ClientFacingPayorSearchResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ClientFacingPayorSearchResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClientFacingPayorSearchResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ClientFacingPayorSearchResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ClientFacingPayorSearchResponseDeprecated struct {
	// Payor code returned for the insurance information.
	Code string `json:"code" url:"code"`
	// Insurance name returned for the insurance information.
	Name string `json:"name" url:"name"`
	// Insurance name aliases returned for the insurance information.
	Aliases []string `json:"aliases" url:"aliases"`
	// Insurance business address returned for the insurance information.
	OrgAddress *Address `json:"org_address" url:"org_address"`
	// The source of the payor, can be one of (platform, team).
	Source ClientFacingPayorCodeSource `json:"source" url:"source"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ClientFacingPayorSearchResponseDeprecated) GetCode() string {
	if c == nil {
		return ""
	}
	return c.Code
}

func (c *ClientFacingPayorSearchResponseDeprecated) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *ClientFacingPayorSearchResponseDeprecated) GetAliases() []string {
	if c == nil {
		return nil
	}
	return c.Aliases
}

func (c *ClientFacingPayorSearchResponseDeprecated) GetOrgAddress() *Address {
	if c == nil {
		return nil
	}
	return c.OrgAddress
}

func (c *ClientFacingPayorSearchResponseDeprecated) GetSource() ClientFacingPayorCodeSource {
	if c == nil {
		return ""
	}
	return c.Source
}

func (c *ClientFacingPayorSearchResponseDeprecated) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ClientFacingPayorSearchResponseDeprecated) UnmarshalJSON(data []byte) error {
	type unmarshaler ClientFacingPayorSearchResponseDeprecated
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClientFacingPayorSearchResponseDeprecated(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ClientFacingPayorSearchResponseDeprecated) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
