// This file was auto-generated by Fern from our API Definition.

package client

import (
	activity "github.com/tryVital/vital-go/activity"
	aggregate "github.com/tryVital/vital-go/aggregate"
	body "github.com/tryVital/vital-go/body"
	core "github.com/tryVital/vital-go/core"
	devices "github.com/tryVital/vital-go/devices"
	electrocardiogram "github.com/tryVital/vital-go/electrocardiogram"
	insurance "github.com/tryVital/vital-go/insurance"
	introspect "github.com/tryVital/vital-go/introspect"
	labtests "github.com/tryVital/vital-go/labtests"
	link "github.com/tryVital/vital-go/link"
	meal "github.com/tryVital/vital-go/meal"
	menstrualcycle "github.com/tryVital/vital-go/menstrualcycle"
	option "github.com/tryVital/vital-go/option"
	order "github.com/tryVital/vital-go/order"
	payor "github.com/tryVital/vital-go/payor"
	profile "github.com/tryVital/vital-go/profile"
	providers "github.com/tryVital/vital-go/providers"
	sleep "github.com/tryVital/vital-go/sleep"
	sleepcycle "github.com/tryVital/vital-go/sleepcycle"
	team "github.com/tryVital/vital-go/team"
	testkit "github.com/tryVital/vital-go/testkit"
	user "github.com/tryVital/vital-go/user"
	vitals "github.com/tryVital/vital-go/vitals"
	workouts "github.com/tryVital/vital-go/workouts"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header

	Providers         *providers.Client
	Link              *link.Client
	Electrocardiogram *electrocardiogram.Client
	SleepCycle        *sleepcycle.Client
	Profile           *profile.Client
	Devices           *devices.Client
	Activity          *activity.Client
	Workouts          *workouts.Client
	Sleep             *sleep.Client
	Body              *body.Client
	Meal              *meal.Client
	MenstrualCycle    *menstrualcycle.Client
	Vitals            *vitals.Client
	User              *user.Client
	Team              *team.Client
	Introspect        *introspect.Client
	LabTests          *labtests.Client
	Testkit           *testkit.Client
	Order             *order.Client
	Insurance         *insurance.Client
	Payor             *payor.Client
	Aggregate         *aggregate.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: core.NewCaller(
			&core.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:            options.ToHeader(),
		Providers:         providers.NewClient(opts...),
		Link:              link.NewClient(opts...),
		Electrocardiogram: electrocardiogram.NewClient(opts...),
		SleepCycle:        sleepcycle.NewClient(opts...),
		Profile:           profile.NewClient(opts...),
		Devices:           devices.NewClient(opts...),
		Activity:          activity.NewClient(opts...),
		Workouts:          workouts.NewClient(opts...),
		Sleep:             sleep.NewClient(opts...),
		Body:              body.NewClient(opts...),
		Meal:              meal.NewClient(opts...),
		MenstrualCycle:    menstrualcycle.NewClient(opts...),
		Vitals:            vitals.NewClient(opts...),
		User:              user.NewClient(opts...),
		Team:              team.NewClient(opts...),
		Introspect:        introspect.NewClient(opts...),
		LabTests:          labtests.NewClient(opts...),
		Testkit:           testkit.NewClient(opts...),
		Order:             order.NewClient(opts...),
		Insurance:         insurance.NewClient(opts...),
		Payor:             payor.NewClient(opts...),
		Aggregate:         aggregate.NewClient(opts...),
	}
}
