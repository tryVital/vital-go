// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/tryVital/vital-go/internal"
)

type CreatePayorBody struct {
	Name            string                     `json:"name" url:"-"`
	Address         *Address                   `json:"address,omitempty" url:"-"`
	Provider        *PayorCodeExternalProvider `json:"provider,omitempty" url:"-"`
	ProviderPayorId *string                    `json:"provider_payor_id,omitempty" url:"-"`
}

type ClientFacingPayor struct {
	// Payor code returned for the insurance information.
	PayorCode string `json:"payor_code" url:"payor_code"`
	// Insurance name returned for the insurance information.
	Name string `json:"name" url:"name"`
	// Insurance name aliases returned for the insurance information.
	Aliases []string `json:"aliases" url:"aliases"`
	// Insurance business address returned for the insurance information.
	OrgAddress *Address `json:"org_address" url:"org_address"`
	// The source of the payor, can be one of (platform, team).
	Source ClientFacingPayorCodeSource `json:"source" url:"source"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ClientFacingPayor) GetPayorCode() string {
	if c == nil {
		return ""
	}
	return c.PayorCode
}

func (c *ClientFacingPayor) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *ClientFacingPayor) GetAliases() []string {
	if c == nil {
		return nil
	}
	return c.Aliases
}

func (c *ClientFacingPayor) GetOrgAddress() *Address {
	if c == nil {
		return nil
	}
	return c.OrgAddress
}

func (c *ClientFacingPayor) GetSource() ClientFacingPayorCodeSource {
	if c == nil {
		return ""
	}
	return c.Source
}

func (c *ClientFacingPayor) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ClientFacingPayor) UnmarshalJSON(data []byte) error {
	type unmarshaler ClientFacingPayor
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClientFacingPayor(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ClientFacingPayor) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
