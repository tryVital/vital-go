// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/tryVital/vital-go/internal"
)

type ProvidersGetAllRequest struct {
	SourceType *string `json:"-" url:"source_type,omitempty"`
}

type ClientFacingProviderDetailed struct {
	// Name of source of information
	Name string `json:"name" url:"name"`
	// Slug for designated source
	Slug string `json:"slug" url:"slug"`
	// Description of source of information
	Description string `json:"description" url:"description"`
	// URL for source logo
	Logo               *string                `json:"logo,omitempty" url:"logo,omitempty"`
	AuthType           *SourceAuthType        `json:"auth_type,omitempty" url:"auth_type,omitempty"`
	SupportedResources []ClientFacingResource `json:"supported_resources,omitempty" url:"supported_resources,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ClientFacingProviderDetailed) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *ClientFacingProviderDetailed) GetSlug() string {
	if c == nil {
		return ""
	}
	return c.Slug
}

func (c *ClientFacingProviderDetailed) GetDescription() string {
	if c == nil {
		return ""
	}
	return c.Description
}

func (c *ClientFacingProviderDetailed) GetLogo() *string {
	if c == nil {
		return nil
	}
	return c.Logo
}

func (c *ClientFacingProviderDetailed) GetAuthType() *SourceAuthType {
	if c == nil {
		return nil
	}
	return c.AuthType
}

func (c *ClientFacingProviderDetailed) GetSupportedResources() []ClientFacingResource {
	if c == nil {
		return nil
	}
	return c.SupportedResources
}

func (c *ClientFacingProviderDetailed) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ClientFacingProviderDetailed) UnmarshalJSON(data []byte) error {
	type unmarshaler ClientFacingProviderDetailed
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClientFacingProviderDetailed(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ClientFacingProviderDetailed) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
