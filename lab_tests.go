// This file was auto-generated by Fern from our API Definition.

package api

import (
	time "time"
)

type AppointmentBookingRequest struct {
	BookingKey string `json:"booking_key"`
}

type AppointmentCancelRequest struct {
	CancellationReasonId string  `json:"cancellation_reason_id"`
	Notes                *string `json:"notes,omitempty"`
}

type CreateLabTestRequest struct {
	MarkerIds   []int                   `json:"marker_ids,omitempty"`
	ProviderIds []string                `json:"provider_ids,omitempty"`
	Name        string                  `json:"name"`
	Method      LabTestCollectionMethod `json:"method,omitempty"`
	Description string                  `json:"description"`
	Fasting     *bool                   `json:"fasting,omitempty"`
}

type CreateOrderRequestCompatible struct {
	UserId          string                        `json:"user_id"`
	LabTestId       string                        `json:"lab_test_id"`
	Physician       *PhysicianCreateRequest       `json:"physician,omitempty"`
	HealthInsurance *HealthInsuranceCreateRequest `json:"health_insurance,omitempty"`
	// Defines whether order is priority or not. For some labs, this refers to a STAT order.
	Priority       *bool                          `json:"priority,omitempty"`
	Consents       []*Consent                     `json:"consents,omitempty"`
	ActivateBy     *string                        `json:"activate_by,omitempty"`
	AoeAnswers     []*AoEAnswer                   `json:"aoe_answers,omitempty"`
	Passthrough    *string                        `json:"passthrough,omitempty"`
	PatientDetails *PatientDetails                `json:"patient_details,omitempty"`
	PatientAddress *PatientAddressCompatibleInput `json:"patient_address,omitempty"`
}

type LabTestsGetAreaInfoRequest struct {
	// Zip code of the area to check
	ZipCode string `json:"-"`
	// Radius in which to search in miles
	Radius *AllowedRadius `json:"-"`
	// Lab to check for PSCs
	Lab *Labs `json:"-"`
}

type LabTestsGetLabelsPdfRequest struct {
	// Number of labels to generate
	NumberOfLabels *int `json:"-"`
	// Collection date
	CollectionDate time.Time `json:"-"`
}

type LabTestsGetMarkersRequest struct {
	// The identifier Vital assigned to a lab partner.
	LabId []*int `json:"-"`
	// The name or test code of an individual biomarker or a panel.
	Name *string `json:"-"`
	Page *int    `json:"-"`
	Size *int    `json:"-"`
}

type LabTestsGetMarkersForLabTestRequest struct {
	Page *int `json:"-"`
	Size *int `json:"-"`
}

type LabTestsGetOrderPscInfoRequest struct {
	// Radius in which to search in miles
	Radius *AllowedRadius `json:"-"`
}

type LabTestsGetOrdersRequest struct {
	// Date from in YYYY-MM-DD or ISO formatted date time. If a date is provided without a time, the time will be set to 00:00:00
	StartDate *time.Time `json:"-"`
	// Date to YYYY-MM-DD or ISO formatted date time. If a date is provided without a time, the time will be set to 23:59:59
	EndDate *time.Time `json:"-"`
	// Filter by user ID.
	UserId *string `json:"-"`
	// Filter by patient name.
	PatientName *string `json:"-"`
	// Filter by shipping recipient name.
	ShippingRecipientName *string `json:"-"`
	// Filter by order ids.
	OrderIds []*string `json:"-"`
	Page     *int      `json:"-"`
	Size     *int      `json:"-"`
}

type LabTestsGetPscInfoRequest struct {
	// Zip code of the area to check
	ZipCode string `json:"-"`
	// Lab ID to check for PSCs
	LabId int `json:"-"`
	// Radius in which to search. (meters)
	Radius *AllowedRadius `json:"-"`
}

type RequestAppointmentRequest struct {
	// At-home phlebotomy appointment address.
	Address  *UsAddress          `json:"address,omitempty"`
	Provider AppointmentProvider `json:"provider,omitempty"`
}

type AppointmentRescheduleRequest struct {
	BookingKey string `json:"booking_key"`
}

type LabTestsSimulateOrderProcessRequest struct {
	FinalStatus *OrderStatus `json:"-"`
	Delay       *int         `json:"-"`
}
