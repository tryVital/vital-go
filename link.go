// This file was auto-generated by Fern from our API Definition.

package api

import (
	core "github.com/fern-vital/vital-go/core"
	time "time"
)

type PasswordAuthLink struct {
	VitalLinkClientRegion *string   `json:"-"`
	Username              string    `json:"username"`
	Password              string    `json:"password"`
	Provider              Providers `json:"provider,omitempty"`
	AuthType              AuthType  `json:"auth_type,omitempty"`
}

type LinkTokenBase struct {
	Token     string               `json:"token"`
	IsUsed    *core.Optional[bool] `json:"is_used,omitempty"`
	OauthInfo map[string]any       `json:"oauth_info,omitempty"`
}

type LinkConnectProviderRequest struct {
	VitalSdkNoRedirect *string `json:"-"`
}

type ManualConnectionData struct {
	UserId     string                 `json:"user_id"`
	ProviderId *core.Optional[string] `json:"provider_id,omitempty"`
}

type LinkCreateRequest struct {
	UserId    string     `json:"-"`
	ExpiresAt *time.Time `json:"-"`
}

type DemoConnectionCreationPayload struct {
	// Vital user ID
	UserId string `json:"user_id"`
	// Demo provider. For more information, please check out our docs (https://docs.tryvital.io/wearables/providers/test_data)
	Provider DemoProviders `json:"provider,omitempty"`
}

type EmailAuthLink struct {
	Email    string                 `json:"email"`
	Provider Providers              `json:"provider,omitempty"`
	AuthType AuthType               `json:"auth_type,omitempty"`
	Region   *core.Optional[Region] `json:"region,omitempty"`
}

type EmailProviderAuthLink struct {
	Email                         string                    `json:"email"`
	EmailProviderAuthLinkProvider *core.Optional[Providers] `json:"provider,omitempty"`
	Region                        *core.Optional[Region]    `json:"region,omitempty"`
}

type LinkExchangeTokenRequest struct {
	Code string `json:"-"`
}

type LinkTokenExchange struct {
	// User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.
	UserKey           string                    `json:"user_key"`
	Provider          *core.Optional[Providers] `json:"provider,omitempty"`
	RedirectUrl       *core.Optional[string]    `json:"redirect_url,omitempty"`
	FilterOnProviders []Providers               `json:"filter_on_providers,omitempty"`
}

type IndividualProviderData struct {
	VitalLinkClientRegion *string `json:"-"`
	// Username for provider
	Username string `json:"username"`
	// Password for provider
	Password string `json:"password"`
}

type BeginLinkTokenRequest struct {
	LinkToken string    `json:"link_token"`
	Provider  Providers `json:"provider,omitempty"`
}
