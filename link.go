// This file was auto-generated by Fern from our API Definition.

package api

import (
	time "time"
)

type LinkCodeCreateRequest struct {
	UserId    string     `json:"-"`
	ExpiresAt *time.Time `json:"-"`
}

type CompletePasswordProviderMfaBody struct {
	VitalLinkToken *string `json:"-"`
	MfaCode        string  `json:"mfa_code"`
}

type DemoConnectionCreationPayload struct {
	// Vital user ID
	UserId string `json:"user_id"`
	// Demo provider. For more information, please check out our docs (https://docs.tryvital.io/wearables/providers/test_data)
	Provider DemoProviders `json:"provider,omitempty"`
}

type EmailProviderAuthLink struct {
	VitalLinkToken                *string    `json:"-"`
	Email                         string     `json:"email"`
	EmailProviderAuthLinkProvider *Providers `json:"provider,omitempty"`
	Region                        *Region    `json:"region,omitempty"`
}

type ManualConnectionData struct {
	UserId     string  `json:"user_id"`
	ProviderId *string `json:"provider_id,omitempty"`
}

type IndividualProviderData struct {
	VitalLinkToken *string `json:"-"`
	// Username for provider
	Username string `json:"username"`
	// Password for provider
	Password string  `json:"password"`
	Region   *Region `json:"region,omitempty"`
}

type EmailAuthLink struct {
	VitalLinkToken *string   `json:"-"`
	Email          string    `json:"email"`
	Provider       Providers `json:"provider,omitempty"`
	AuthType       AuthType  `json:"auth_type,omitempty"`
	Region         *Region   `json:"region,omitempty"`
}

type LinkGenerateOauthLinkRequest struct {
	VitalLinkToken *string `json:"-"`
}

type LinkGetAllProvidersRequest struct {
	VitalLinkToken *string `json:"-"`
}

type LinkTokenBase struct {
	Token     string                 `json:"token"`
	IsUsed    *bool                  `json:"is_used,omitempty"`
	OauthInfo map[string]interface{} `json:"oauth_info,omitempty"`
}

type PasswordAuthLink struct {
	VitalLinkToken *string   `json:"-"`
	Username       string    `json:"username"`
	Password       string    `json:"password"`
	Provider       Providers `json:"provider,omitempty"`
	AuthType       AuthType  `json:"auth_type,omitempty"`
}

type BeginLinkTokenRequest struct {
	LinkToken string    `json:"link_token"`
	Provider  Providers `json:"provider,omitempty"`
}

type LinkTokenExchange struct {
	// User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.
	UserId            string      `json:"user_id"`
	Provider          *Providers  `json:"provider,omitempty"`
	RedirectUrl       *string     `json:"redirect_url,omitempty"`
	FilterOnProviders []Providers `json:"filter_on_providers,omitempty"`
}

type LinkTokenStateRequest struct {
	VitalLinkToken *string `json:"-"`
}
