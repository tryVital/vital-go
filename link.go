// This file was auto-generated by Fern from our API Definition.

package api

import (
	time "time"
)

type BulkExportConnectionsBody struct {
	UserIds   []string       `json:"user_ids,omitempty" url:"-"`
	Provider  OAuthProviders `json:"provider" url:"-"`
	NextToken *string        `json:"next_token,omitempty" url:"-"`
}

type BulkImportConnectionsBody struct {
	Provider    OAuthProviders      `json:"provider" url:"-"`
	Connections []*ConnectionRecipe `json:"connections,omitempty" url:"-"`
}

type BulkPauseConnectionsBody struct {
	UserIds  []string       `json:"user_ids,omitempty" url:"-"`
	Provider OAuthProviders `json:"provider" url:"-"`
}

type BulkTriggerHistoricalPullBody struct {
	UserIds  []string       `json:"user_ids,omitempty" url:"-"`
	Provider OAuthProviders `json:"provider" url:"-"`
}

type LinkCodeCreateRequest struct {
	UserId string `json:"-" url:"user_id"`
	// When the link code should expire. Defaults to server time plus 1 hour.
	ExpiresAt *time.Time `json:"-" url:"expires_at,omitempty"`
}

type CompletePasswordProviderMfaBody struct {
	VitalLinkToken *string `json:"-" url:"-"`
	MfaCode        string  `json:"mfa_code" url:"-"`
}

type DemoConnectionCreationPayload struct {
	// Vital user ID
	UserId string `json:"user_id" url:"-"`
	// Demo provider. For more information, please check out our docs (https://docs.tryvital.io/wearables/providers/test_data)
	Provider DemoProviders `json:"provider" url:"-"`
}

type EmailProviderAuthLink struct {
	VitalLinkToken                *string    `json:"-" url:"-"`
	Email                         string     `json:"email" url:"-"`
	EmailProviderAuthLinkProvider *Providers `json:"provider,omitempty" url:"-"`
	Region                        *Region    `json:"region,omitempty" url:"-"`
}

type ManualConnectionData struct {
	UserId     string  `json:"user_id" url:"-"`
	ProviderId *string `json:"provider_id,omitempty" url:"-"`
}

type IndividualProviderData struct {
	VitalLinkToken *string `json:"-" url:"-"`
	// Username for provider
	Username string `json:"username" url:"-"`
	// Password for provider
	Password string  `json:"password" url:"-"`
	Region   *Region `json:"region,omitempty" url:"-"`
}

type EmailAuthLink struct {
	VitalLinkToken *string   `json:"-" url:"-"`
	Email          string    `json:"email" url:"-"`
	Provider       Providers `json:"provider" url:"-"`
	AuthType       AuthType  `json:"auth_type" url:"-"`
	Region         *Region   `json:"region,omitempty" url:"-"`
}

type LinkGenerateOauthLinkRequest struct {
	VitalLinkToken *string `json:"-" url:"-"`
}

type LinkGetAllProvidersRequest struct {
	VitalLinkToken *string `json:"-" url:"-"`
}

type LinkTokenValidationRequest struct {
	Token string `json:"token" url:"-"`
}

type PasswordAuthLink struct {
	VitalLinkToken *string   `json:"-" url:"-"`
	Username       string    `json:"username" url:"-"`
	Password       string    `json:"password" url:"-"`
	Provider       Providers `json:"provider" url:"-"`
	AuthType       AuthType  `json:"auth_type" url:"-"`
}

type BeginLinkTokenRequest struct {
	LinkToken string    `json:"link_token" url:"-"`
	Provider  Providers `json:"provider" url:"-"`
}

type LinkTokenExchange struct {
	// User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.
	UserId            string      `json:"user_id" url:"-"`
	Provider          *Providers  `json:"provider,omitempty" url:"-"`
	RedirectUrl       *string     `json:"redirect_url,omitempty" url:"-"`
	FilterOnProviders []Providers `json:"filter_on_providers,omitempty" url:"-"`
	OnError           *string     `json:"on_error,omitempty" url:"-"`
	OnClose           *string     `json:"on_close,omitempty" url:"-"`
}

type LinkTokenStateRequest struct {
	VitalLinkToken *string `json:"-" url:"-"`
}
